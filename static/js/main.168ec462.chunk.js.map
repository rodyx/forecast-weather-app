{"version":3,"sources":["components/Landscape/styles.module.scss","components/WeatherData/WeatherData.jsx","api/getDate.js","components/Landscape/Landscape.jsx","api/openweather.js","pages/Main.jsx","App.js","reportWebVitals.js","index.js","pages/styles.module.scss","components/WeatherData/styles.module.scss"],"names":["module","exports","WeatherData","weather","className","styles","weatherDataContainer","citiesSearch","weatherDataDetails","clouds","all","main","humidity","wind","speed","Math","round","pressure","daysOfWeek","months","getCityCurrentDate","timezone","date","Date","now","getTimezoneOffset","getHours","getMinutes","getDay","getDate","getMonth","Landscape","photo","iconCode","str","imgURL","icon","split","slice","length","join","landscape","currentDataWrapper","currentDegress","temp","currentLocation","currentCity","name","currentDate","currentWeather","src","alt","description","charAt","toUpperCase","city","a","fetch","response","ok","json","Main","useState","setCity","imgUrl","setBackground","setWeather","setPhoto","useEffect","createClient","photos","search","query","orientation","then","arr","index","floor","random","large2x","FetchWeatherData","background","backgroundImage","mainContainer","style","information","onSubmit","e","preventDefault","console","log","currentTarget","value","inputSearch","placeholder","type","App","CSSTransition","appear","in","classNames","timeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.168ec462.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"landscape\":\"styles_landscape__1G-Tn\",\"photoAuthor\":\"styles_photoAuthor__12eIo\",\"currentDataWrapper\":\"styles_currentDataWrapper__3OUOS\",\"currentDegress\":\"styles_currentDegress__3aKNo\",\"currentLocation\":\"styles_currentLocation__3i8OG\",\"currentCity\":\"styles_currentCity__2D_tt\",\"currentWeather\":\"styles_currentWeather__1Atnu\"};","import React from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\nexport const WeatherData = ({ weather }) => {\r\n    return (\r\n        <div className={styles.weatherDataContainer}>\r\n                    <div className={styles.citiesSearch}>\r\n                        <div>Москва</div>\r\n                        <div>Милан</div>\r\n                        <div>Париж</div>\r\n                        <div>Токио</div>\r\n                    </div>\r\n                    <div className={styles.weatherDataDetails}>\r\n                        <h2>Детали погоды</h2>\r\n                        <div><span>Облачность</span><span>{weather.clouds.all} %</span></div>\r\n                        <div><span>Влажность</span><span>{weather.main.humidity} %</span></div>\r\n                        <div><span>Скорость ветра</span><span>{weather.wind.speed} км/ч</span></div>\r\n                        <div><span>Давление</span><span>{Math.round(weather.main.pressure / 1.33)} мм</span></div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n","const daysOfWeek = [\r\n    'Воскресенье',\r\n    'Понедельник',\r\n    'Вторник',\r\n    'Среда',\r\n    'Четверг',\r\n    'Пятница',\r\n    'Суббота'\r\n]\r\nconst months=[\r\n    'Янв',\r\n    'Фев',\r\n    'Мар',\r\n    'Апр',\r\n    'Май',\r\n    'Июн',\r\n    'Июл',\r\n    'Авг',\r\n    'Сен',\r\n    'Ноя',\r\n    'Дек'\r\n];\r\n\r\nexport function getCityCurrentDate(timezone) {\r\n    let date = new Date(Date.now() + timezone * 1000 + new Date().getTimezoneOffset() * 60000);\r\n\r\n    return `${date.getHours()} : ${date.getMinutes()} -  ${daysOfWeek[date.getDay()]},  ${date.getDate()} ${months[date.getMonth()]}`\r\n}\r\n\r\n","import React from 'react';\r\nimport { getCityCurrentDate } from '../../api/getDate';\r\nimport styles from './styles.module.scss';\r\n\r\n\r\nexport const Landscape = ( {weather, photo} ) => {\r\n    function lightIcon(iconCode) {\r\n        let icon = iconCode.split('');\r\n        return icon.slice(0,iconCode.length-1).join('') + 'd';\r\n    }\r\n    \r\n    function letterCapitalize(str) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1)\r\n    }\r\n    \r\n    const imgURL = `http://openweathermap.org/img/wn/${lightIcon( weather.weather[0].icon)}@2x.png`;\r\n    \r\n    return (\r\n            <div className={styles.landscape}>\r\n                <div className={styles.currentDataWrapper}>\r\n                    <div className={styles.currentDegress}>{Math.round(weather.main.temp)}&deg;</div>\r\n                    <div className={styles.currentLocation}>\r\n                        <div className={styles.currentCity}>{weather.name}</div>\r\n                        <div className={styles.currentDate}>{getCityCurrentDate(weather.timezone)}</div>\r\n                    </div>\r\n                    <div className={styles.currentWeather}>\r\n                        <img src={imgURL} alt=\"icon\" />\r\n                        <span>{letterCapitalize(weather.weather[0].description)}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}","export async function FetchWeatherData(city) {\r\n    let response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=ru&units=metric&appid=b1b35bba8b434a28a0be2a3e1071ae5b`)\r\n    if (response.ok) {\r\n        let weather = await response.json();\r\n        return weather;\r\n    } else return false\r\n}\r\n\r\n","import React, { useState, useEffect} from 'react';\r\nimport styles from './styles.module.scss';\r\nimport {WeatherData} from '../components/WeatherData/WeatherData'\r\nimport { Landscape } from '../components/Landscape/Landscape';\r\nimport {FetchWeatherData} from '../api/openweather';\r\nimport { createClient } from 'pexels';\r\n\r\n\r\nexport const Main = () => {\r\n    const [city, setCity] = useState('Ташкент');\r\n    const [imgUrl, setBackground] = useState('https://wallpaperaccess.com/full/1093687.png')\r\n    const [weather, setWeather] = useState(null);\r\n    const [photo,setPhoto] = useState(null);\r\n    \r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(e.currentTarget.city)\r\n        setCity(e.currentTarget.city.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (city) {\r\n            const client = createClient('563492ad6f91700001000001e1efacc9129f40259a028a356019f245');\r\n            \r\n            client.photos.search({ query: city, orientation: 'landscape','locale': 'ru-RU' })\r\n                .then(arr => {\r\n                    let index = null;\r\n                    \r\n                    if (arr.photos?.length) {\r\n                        \r\n                        index = Math.floor(Math.random() * arr.photos.length);\r\n                        \r\n                        setPhoto(arr.photos[index])\r\n                        setBackground(arr.photos[index].src.large2x);\r\n                    }\r\n                \r\n                });\r\n                \r\n            FetchWeatherData(city)\r\n                .then(setWeather)\r\n            \r\n                \r\n        }\r\n    }, [city])\r\n\r\n    const background = {\r\n        backgroundImage : `url(${imgUrl})`,\r\n    }\r\n\r\nreturn (\r\n        <div className={styles.mainContainer} style={background}>\r\n                { weather && <Landscape weather={weather} photo={photo}/> }\r\n            <div className={styles.information}>\r\n                <form onSubmit={handleFormSubmit} className={styles.inputSearch}>\r\n                        <input \r\n                            placeholder=\"Другой город..\" \r\n                            type=\"text\" \r\n                            name=\"city\"\r\n                        />\r\n                    <button type=\"submit\">\r\n                        <i className=\"fas fa-search\"></i>\r\n                    </button>\r\n                </form>\r\n                { weather && <WeatherData weather={weather}/>}\r\n                \r\n             </div>\r\n        </div>\r\n   )\r\n}","import React from 'react';\nimport { Main } from './pages/Main';\nimport { CSSTransition} from 'react-transition-group';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <CSSTransition\n            appear\n            in\n            classNames='backgroundTransition'\n            timeout={1000}>\n              \n              <Main />\n      \n      </CSSTransition>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"styles_mainContainer__2p1NZ\",\"information\":\"styles_information__2caY4\",\"inputSearch\":\"styles_inputSearch__1Siwj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherDataContainer\":\"styles_weatherDataContainer__2zt3M\",\"citiesSearch\":\"styles_citiesSearch__2kRIi\",\"weatherDataDetails\":\"styles_weatherDataDetails__180Zt\"};"],"sourceRoot":""}